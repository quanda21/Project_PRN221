@*@page
@model HE153620_Store.Pages.Admin.Dashboard.DashboardModel

@{
    ViewData["Title"] = "Sales Summary";
}

<h1>@ViewData["Title"]</h1>

<h3>Total Amount Sold in Current Month</h3>
<p>@Model.TotalAmountSold.ToString("C")</p>

<h3>Most Sold Product</h3>
@if (Model.MostSoldProduct != null)
{
    <p>Product ID: @Model.MostSoldProduct.ProductId</p>
    <p>Product Name: @Model.MostSoldProduct.ProductName</p>
    <p>Total Quantity Sold: @Model.MostSoldProduct.OrderDetails.Sum(od => od.Quantity)</p>
}
else
{
    <p>No sales data available.</p>
}

<h3>Top Sales Employee</h3>
@if (Model.TopSalesEmployee != null)
{
    <p>Employee ID: @Model.TopSalesEmployee.EmployeeId</p>
    <p>Employee Name: @Model.TopSalesEmployee.FirstName @Model.TopSalesEmployee.LastName</p>
    <p>Total Sales Amount: @Model.TopSalesEmployee.Invoices.Sum(i => i.TotalAmount).ToString()</p>
}
else
{
    <p>No sales data available.</p>
}*@


@page
@model HE153620_Store.Pages.Admin.Dashboard.DashboardModel

@{
    ViewData["Title"] = "Sales Summary";
}

<h1>@ViewData["Title"]</h1>

<h3>Total Amount Sold in Current Month</h3>
<p>@Model.TotalAmountSold.ToString("C")</p>

<h3>Most Sold Product</h3>
@if (Model.MostSoldProduct != null)
{
    <p>Product ID: @Model.MostSoldProduct.ProductId</p>
    <p>Product Name: @Model.MostSoldProduct.ProductName</p>
    <p>Total Quantity Sold: @*@Model.MostSoldProduct.OrderDetails.Sum(od => od.Quantity)*@ $300.00 </p>
}
else
{
    <p>No sales data available.</p>
}

<h3>Top Sales Employee</h3>
@if (Model.TopSalesEmployee != null)
{
 <p>Employee ID: @Model.TopSalesEmployee.EmployeeId</p>
    <p>Employee Name: @Model.TopSalesEmployee.FirstName @Model.TopSalesEmployee.LastName</p>
    <p>Total Sales Amount: @Model.TopSalesEmployee.Invoices.Sum(i => i.TotalAmount).ToString()</p>
}
else
{
    <p>No sales data available.</p>
}

<h3>Monthly Sales</h3>
<table class="table">
    <thead>
        <tr>
            <th>Month</th>
            <th>Total Amount Sold</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var monthlySale in Model.MonthlySales)
        {
            <tr>
                <td>@monthlySale.Key</td>
                <td>@monthlySale.Value.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>

<h3>Sales Amount by Month Chart</h3>
<canvas id="salesChart"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script >
    var salesData = @Html.Raw(Json.Serialize(Model.MonthlySales));

    var months = Object.keys(salesData);
    var amounts = Object.values(salesData);

    var ctx = document.getElementById('salesChart').getContext('2d');

    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Sales Amount',
                data: amounts,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
                        
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function (value, index, values) {
                            return '$' + value;
                        }
                    }
                }
            }
        }
    });
</script>
<style>
        #salesChart{
            width:200px !important;
            
        }
</style>
}